{
	"info": {
		"_postman_id": "8bb970a7-a76d-4277-bd4a-259c93087f25",
		"name": "SimpleScenarioTest",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Fetch All Available Counters",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Response is in JSON format\", function () {\r",
							"    pm.response.to.be.json;\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "localhost:8888/counters",
					"host": [
						"localhost"
					],
					"port": "8888",
					"path": [
						"counters"
					]
				}
			},
			"response": []
		},
		{
			"name": "Add a counter",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 201\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});\r",
							"\r",
							"// save the `newCounter` sent in the request as an environment variable\r",
							"pm.environment.set(\"newCounter\",{\"counterTest\": -1});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\":\"counterTest\",\r\n    \"value\":-1\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:8888/counters",
					"host": [
						"localhost"
					],
					"port": "8888",
					"path": [
						"counters"
					]
				}
			},
			"response": []
		},
		{
			"name": "Verify new counter exists",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Item name is correct\", function () {\r",
							"    let response = pm.response.json();\r",
							"    let savedItemName = pm.environment.get(\"newCounter\");\r",
							"    //pm.expect(response).to.equal(savedItemName);\r",
							"    pm.expect(response).to.contain(savedItemName);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "localhost:8888/counters/counterTest",
					"host": [
						"localhost"
					],
					"port": "8888",
					"path": [
						"counters",
						"counterTest"
					]
				}
			},
			"response": []
		},
		{
			"name": "Update new counter",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.environment.unset(\"newCounter\");\r",
							"pm.environment.set(\"newCounter\", { \"counterTest\": 0 });"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"url": {
					"raw": "localhost:8888/counters/counterTest",
					"host": [
						"localhost"
					],
					"port": "8888",
					"path": [
						"counters",
						"counterTest"
					]
				}
			},
			"response": []
		},
		{
			"name": "Verify new counter was updated",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Successful update of tghe new counter\", function () {\r",
							"    let response = pm.response.json();\r",
							"    let savedItemName = pm.environment.get(\"newCounter\");\r",
							"    //pm.expect(response).to.equal(savedItemName);\r",
							"    pm.expect(response).to.contain(savedItemName);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "localhost:8888/counters/counterTest",
					"host": [
						"localhost"
					],
					"port": "8888",
					"path": [
						"counters",
						"counterTest"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete new counter",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "localhost:8888/counters/counterTest",
					"host": [
						"localhost"
					],
					"port": "8888",
					"path": [
						"counters",
						"counterTest"
					]
				}
			},
			"response": []
		},
		{
			"name": "Verify new counter was deleted",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404 not found\", function () {\r",
							"    pm.response.to.have.status(404);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "localhost:8888/counters/counterTest",
					"host": [
						"localhost"
					],
					"port": "8888",
					"path": [
						"counters",
						"counterTest"
					]
				}
			},
			"response": []
		}
	]
}